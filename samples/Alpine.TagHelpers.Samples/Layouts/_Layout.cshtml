@* Template: https://tailwindui.com/components/application-ui/application-shells/sidebar#component-b8d00b1bdd11267c5f7456532e658a2f *@

@using Tailwind.Heroicons
@using Alpine.TagHelpers.Samples.Components.NavigationItemTagHelper
@using Microsoft.AspNetCore.Mvc.TagHelpers
@{
  var introductionLink = new Uri(Url.ActionLink("GetIntroduction", "GetDocumentation")).PathAndQuery;
  var navigationItems = new List<NavigationItem>
  {
    new()
    {
      Text = "Introduction",
      Href = introductionLink,
      Hrefs = new[] { introductionLink },
      Icon = IconSymbol.RocketLaunch
    },
  };
}

@{
  var documentationNavigationItems = new List<NavigationItem>
  {
    new()
    {
      Text = "Documentation",
      Href = introductionLink,
      Hrefs = new[] { introductionLink }
    },
  };
}

@{
  var alpineDataLink = new Uri(Url.ActionLink("GetAlpineData", "GetAlpineData")).PathAndQuery;
  var components = new List<NavigationItem>
  {
    new()
    {
      Text = "Alpine Data",
      Href = alpineDataLink,
      Hrefs = new[] { alpineDataLink },
    }
  };
}

<!DOCTYPE html>
<html class="h-full bg-white"
      lang="en">
<head>
  <meta charset="utf-8"/>
  <meta content="width=device-width, initial-scale=1.0"
        name="viewport"/>
  <title>@ViewData["Title"] - AlpineTagHelpers.Samples</title>
  <link asp-append-version="true"
        href="~/css/site.css"
        rel="stylesheet"/>
  <script defer src="~/lib/alpinejs/dist/cdn.min.js"></script>
</head>
<body class="h-full">
<div x-data="{ showSidebar: false }">
<!-- Off-canvas menu for mobile, show/hide based on off-canvas menu state. -->
<div aria-modal="true"
     class="relative z-50 lg:hidden"
     role="dialog"
     x-show="showSidebar">
  <!--
  Off-canvas menu backdrop, show/hide based on off-canvas menu state.

  Entering: "transition-opacity ease-linear duration-300"
  From: "opacity-0"
  To: "opacity-100"
  Leaving: "transition-opacity ease-linear duration-300"
  From: "opacity-100"
  To: "opacity-0"
  -->
  <div class="fixed inset-0 bg-gray-900/80"></div>

  <div class="fixed inset-0 flex">
    <!--
    Off-canvas menu, show/hide based on off-canvas menu state.

    Entering: "transition ease-in-out duration-300 transform"
    From: "-translate-x-full"
    To: "translate-x-0"
    Leaving: "transition ease-in-out duration-300 transform"
    From: "translate-x-0"
    To: "-translate-x-full"
    -->
    <div class="relative mr-16 flex w-full max-w-xs flex-1">
      <!--
      Close button, show/hide based on off-canvas menu state.

      Entering: "ease-in-out duration-300"
      From: "opacity-0"
      To: "opacity-100"
      Leaving: "ease-in-out duration-300"
      From: "opacity-100"
      To: "opacity-0"
      -->
      <div class="absolute left-full top-0 flex w-16 justify-center pt-5">
        <button class="-m-2.5 p-2.5"
                type="button"
                x-on:click="showSidebar = !showSidebar">
          <span class="sr-only">Close sidebar</span>
          <svg aria-hidden="true"
               class="h-6 w-6 text-white"
               fill="none"
               stroke="currentColor"
               stroke-width="1.5"
               viewBox="0 0 24 24">
            <path d="M6 18L18 6M6 6l12 12"
                  stroke-linecap="round"
                  stroke-linejoin="round"/>
          </svg>
        </button>
      </div>

      <!-- Sidebar component, swap this element with another sidebar if you like -->
      <div class="flex grow flex-col gap-y-5 overflow-y-auto bg-white px-6 pb-4">
        <a href="@Url.ActionLink("GetHome", "GetHome")">
          <div class="flex h-16 shrink-0 items-center">
            <img alt="Your Company"
                 class="h-8 w-auto"
                 src="~/images/icon.png">
            <div class="font-semibold pl-2">Alpine.TagHelpers</div>
          </div>
        </a>
        <nav class="flex flex-1 flex-col">
          <ul class="flex flex-1 flex-col gap-y-7"
              role="list">
            <li>
              <ul class="-mx-2 space-y-1"
                  role="list">
                @{
                  foreach (var item in navigationItems)
                  {
                    <navigation-item item="item"></navigation-item>
                  }
                }
              </ul>
            </li>
            <li>
              <div class="text-md font-semibold leading-6 text-gray-600">Tag Helpers</div>
              <ul class="-mx-2 mt-2 space-y-1"
                  role="list">
                @{
                  foreach (var item in components)
                  {
                    <navigation-item item="item"></navigation-item>
                  }
                }

              </ul>
            </li>
          </ul>
        </nav>
      </div>
    </div>
  </div>
</div>

<!-- Static sidebar for desktop -->
<div class="hidden lg:fixed lg:inset-y-0 lg:z-50 lg:flex lg:w-72 lg:flex-col">
  <!-- Sidebar component, swap this element with another sidebar if you like -->
  <div class="flex grow flex-col gap-y-5 overflow-y-auto border-r border-gray-200 bg-white px-6 pb-4">
    <a href="@Url.ActionLink("GetHome", "GetHome")">
      <div class="flex h-16 shrink-0 items-center">
        <img alt="Alpine.TagHelpers Logo"
             class="h-8 w-auto"
             src="~/images/icon.png">
        <div class="font-semibold pl-2">Alpine.TagHelpers</div>
      </div>
    </a>
    <nav class="flex flex-1 flex-col">
      <div class="font-semibold text-gray-600">Getting started</div>
      <ul class="flex flex-1 flex-col gap-y-7 pt-2"
          role="list">
        <li>
          <ul class="-mx-2 space-y-1"
              role="list">
            @{
              foreach (var item in navigationItems)
              {
                <navigation-item item="item"></navigation-item>
              }
            }
          </ul>
        </li>
        <li>
          <div class="text-md font-semibold leading-6 text-gray-600">Tag Helpers</div>
          <ul class="-mx-2 mt-2 space-y-1"
              role="list">
            @{
              foreach (var item in components)
              {
                <navigation-item item="item"></navigation-item>
              }
            }
          </ul>
        </li>
      </ul>
    </nav>
  </div>
</div>

<div class="lg:pl-72">
  <div class="sticky top-0 z-40 flex h-16 shrink-0 items-center gap-x-4 border-b border-gray-200 bg-white px-4 shadow-sm sm:gap-x-6 sm:px-6 lg:px-8">
    <button class="-m-2.5 p-2.5 text-gray-700 lg:hidden"
            type="button"
            x-on:click="showSidebar = true">
      <span class="sr-only">Open sidebar</span>
      <svg aria-hidden="true"
           class="h-6 w-6"
           fill="none"
           stroke="currentColor"
           stroke-width="1.5"
           viewBox="0 0 24 24">
        <path d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5"
              stroke-linecap="round"
              stroke-linejoin="round"/>
      </svg>
    </button>

    <!-- Separator -->
    <div aria-hidden="true"
         class="h-6 w-px bg-gray-200 lg:hidden"></div>

    <div class="flex flex-1 gap-x-4 self-stretch lg:gap-x-6">
      <ul class="flex items-center">
        @foreach (var item in documentationNavigationItems)
        {
          <li>
            <navigation-item item="item"></navigation-item>
          </li>
        }
      </ul>
    </div>
  </div>

  <main class="py-10">
    <div class="px-4 sm:px-6 lg:px-8">
      @RenderBody()
    </div>
  </main>
</div>
</div>

</body>
@await RenderSectionAsync("Scripts", required: false)
</html>
